generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  User
  Admin
}

model User {
  id              String       @id @default(uuid())
  name            String
  email           String?      @unique
  password        String
  role            Role       @default(User)
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  isEmailVerified Boolean      @default(false)
  tokens          Token[]
  products        Product[]
  orders          Order[]
}

model Token {
  id          String    @id @default(uuid())
  token       String    @db.VarChar(400)
  userId      String
  type        String
  expires     DateTime
  blacklisted Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  User        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Product {
  id            String       @id @default(uuid())
  name          String
  description   String
  price         Float
  quantityInStock Int
  categoryId    String
  userId        String
  orderItems    OrderItem[]
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  category      Category     @relation(fields: [categoryId], references: [id])
  user          User         @relation(fields: [userId], references: [id])
}

model Category {
  id        String    @id @default(uuid())
  name      String
  products  Product[]
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}

model Order {
  id          String     @id @default(uuid())
  date        DateTime
  totalPrice  Float
  customerName String
  customerEmail String
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  orderItems  OrderItem[]
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}

model OrderItem {
  id         String    @id @default(uuid())
  orderId    String
  order      Order     @relation(fields: [orderId], references: [id])
  productId  String
  product    Product   @relation(fields: [productId], references: [id])
  quantity   Int
  unitPrice  Float
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}
